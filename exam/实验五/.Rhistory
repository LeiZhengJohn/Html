getwd()
setwd("D:/RFile/实验五")
#随机数生成
set.seed(1)
a<-seq(0,100,length.out=100)
set.seed(2)
b<-seq(0,100,length.out=100)
#t检验
t.test(a,b,var.equal=TRUE) #等方差t检验
t.test(a,b) #异方差t检验
#概率密度分布图
#a
png(file = "t_test.png")
curve(dnorm(x,mean(a,na.rm=TRUE),sd(a,na.rm=TRUE)),xlim=c(0,100),ylim=c(0,0.04),col="blue",lwd=3)
abline(v=mean(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加均值线
abline(v=mean(a,na.rm=TRUE)+sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
abline(v=mean(a,na.rm=TRUE)-sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE),sd(b,na.rm=TRUE)),add=TRUE,xlim=c(0,100),ylim=c(0,0.04),col="red",lwd=3)
abline(v=mean(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加均值线
abline(v=mean(b,na.rm=TRUE)+sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
abline(v=mean(b,na.rm=TRUE)-sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
dev.off()
#随机数生成
set.seed(1)
a<-seq(0,100,length.out=100)
set.seed(2)
b<-seq(0,100,length.out=100)
#t检验
t.test(a,b,var.equal=TRUE) #等方差t检验
t.test(a,b) #异方差t检验
#概率密度分布图
#a
png(file = "t_test_1.png")
curve(dnorm(x,mean(a,na.rm=TRUE),sd(a,na.rm=TRUE)),xlim=c(0,100),ylim=c(0,0.04),col="blue",lwd=3)
abline(v=mean(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加均值线
abline(v=mean(a,na.rm=TRUE)+sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
abline(v=mean(a,na.rm=TRUE)-sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE),sd(b,na.rm=TRUE)),add=TRUE,xlim=c(0,100),ylim=c(0,0.04),col="red",lwd=3,add=TRUE)
abline(v=mean(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加均值线
abline(v=mean(b,na.rm=TRUE)+sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
abline(v=mean(b,na.rm=TRUE)-sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
dev.off()
#随机数生成
set.seed(1)
a<-seq(0,100,length.out=100)
set.seed(2)
b<-seq(0,100,length.out=50)
#t检验
t.test(a,b,var.equal=TRUE) #等方差t检验
t.test(a,b) #异方差t检验
#概率密度分布图
#a
png(file = "t_test_2.png")
curve(dnorm(x,mean(a,na.rm=TRUE),sd(a,na.rm=TRUE)),xlim=c(0,100),ylim=c(0,0.04),col="blue",lwd=3)
abline(v=mean(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加均值线
abline(v=mean(a,na.rm=TRUE)+sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
abline(v=mean(a,na.rm=TRUE)-sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE),sd(b,na.rm=TRUE)),add=TRUE,xlim=c(0,100),ylim=c(0,0.04),col="red",lwd=3,add=TRUE)
abline(v=mean(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加均值线
abline(v=mean(b,na.rm=TRUE)+sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
abline(v=mean(b,na.rm=TRUE)-sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
dev.off()
#随机数生成
set.seed(1)
a<-seq(0,100,length.out=100)
set.seed(2)
b<-seq(0,100,length.out=50)
#t检验
t.test(a,b,var.equal=TRUE) #等方差t检验
t.test(a,b) #异方差t检验
#概率密度分布图
#a
png(file = "t_test_2.png")
curve(dnorm(x,mean(a,na.rm=TRUE),sd(a,na.rm=TRUE)),xlim=c(0,100),ylim=c(0,0.04),col="blue",lwd=3)
abline(v=mean(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加均值线
abline(v=mean(a,na.rm=TRUE)+sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
abline(v=mean(a,na.rm=TRUE)-sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE),sd(b,na.rm=TRUE)),add=TRUE,xlim=c(0,100),ylim=c(0,0.04),col="red",lwd=3)
abline(v=mean(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加均值线
abline(v=mean(b,na.rm=TRUE)+sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
abline(v=mean(b,na.rm=TRUE)-sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
dev.off()
#随机数生成
set.seed(1)
a<-seq(60,90,length.out=100)
set.seed(2)
b<-seq(70,80,length.out=100)
#t检验
t.test(a,b,var.equal=TRUE) #等方差t检验
t.test(a,b) #异方差t检验
#概率密度分布图
#a
png(file = "t_test_3.png")
curve(dnorm(x,mean(a,na.rm=TRUE),sd(a,na.rm=TRUE)),xlim=c(0,100),ylim=c(0,0.04),col="blue",lwd=3)
abline(v=mean(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加均值线
abline(v=mean(a,na.rm=TRUE)+sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
abline(v=mean(a,na.rm=TRUE)-sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE),sd(b,na.rm=TRUE)),add=TRUE,xlim=c(0,100),ylim=c(0,0.04),col="red",lwd=3)
abline(v=mean(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加均值线
abline(v=mean(b,na.rm=TRUE)+sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
abline(v=mean(b,na.rm=TRUE)-sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
dev.off()
#随机数生成
set.seed(1)
a<-seq(60,90,length.out=100)
set.seed(2)
b<-seq(70,80,length.out=100)
#t检验
t.test(a,b,var.equal=TRUE) #等方差t检验
t.test(a,b) #异方差t检验
#概率密度分布图
#a
png(file = "t_test_3.png")
curve(dnorm(x,mean(a,na.rm=TRUE),sd(a,na.rm=TRUE)),xlim=c(0,100),ylim=c(0,0.06),col="blue",lwd=3)
abline(v=mean(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加均值线
abline(v=mean(a,na.rm=TRUE)+sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
abline(v=mean(a,na.rm=TRUE)-sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE),sd(b,na.rm=TRUE)),add=TRUE,xlim=c(0,100),ylim=c(0,0.06),col="red",lwd=3)
abline(v=mean(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加均值线
abline(v=mean(b,na.rm=TRUE)+sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
abline(v=mean(b,na.rm=TRUE)-sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
dev.off()
#随机数生成
set.seed(1)
a<-seq(60,90,length.out=100)
set.seed(2)
b<-seq(70,80,length.out=100)
#t检验
t.test(a,b,var.equal=TRUE) #等方差t检验
t.test(a,b) #异方差t检验
#概率密度分布图
#a
png(file = "t_test_3.png")
curve(dnorm(x,mean(a,na.rm=TRUE),sd(a,na.rm=TRUE)),xlim=c(0,100),ylim=c(0,0.08),col="blue",lwd=3)
abline(v=mean(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加均值线
abline(v=mean(a,na.rm=TRUE)+sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
abline(v=mean(a,na.rm=TRUE)-sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE),sd(b,na.rm=TRUE)),add=TRUE,xlim=c(0,100),ylim=c(0,0.08),col="red",lwd=3)
abline(v=mean(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加均值线
abline(v=mean(b,na.rm=TRUE)+sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
abline(v=mean(b,na.rm=TRUE)-sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
dev.off()
#随机数生成
set.seed(1)
a<-seq(60,90,length.out=100)
set.seed(2)
b<-seq(70,80,length.out=100)
#t检验
t.test(a,b,var.equal=TRUE) #等方差t检验
t.test(a,b) #异方差t检验
#概率密度分布图
#a
png(file = "t_test_3.png")
curve(dnorm(x,mean(a,na.rm=TRUE),sd(a,na.rm=TRUE)),xlim=c(0,100),ylim=c(0,0.12),col="blue",lwd=3)
abline(v=mean(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加均值线
abline(v=mean(a,na.rm=TRUE)+sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
abline(v=mean(a,na.rm=TRUE)-sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE),sd(b,na.rm=TRUE)),add=TRUE,xlim=c(0,100),ylim=c(0,0.12),col="red",lwd=3)
abline(v=mean(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加均值线
abline(v=mean(b,na.rm=TRUE)+sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
abline(v=mean(b,na.rm=TRUE)-sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
dev.off()
#随机数生成
set.seed(1)
a<-seq(60,90,length.out=100)
set.seed(2)
b<-seq(70,80,length.out=100)
#t检验
t.test(a,b,var.equal=TRUE) #等方差t检验
t.test(a,b) #异方差t检验
#概率密度分布图
#a
png(file = "t_test_3.png")
curve(dnorm(x,mean(a,na.rm=TRUE),sd(a,na.rm=TRUE)),xlim=c(0,100),ylim=c(0,0.14),col="blue",lwd=3)
abline(v=mean(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加均值线
abline(v=mean(a,na.rm=TRUE)+sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
abline(v=mean(a,na.rm=TRUE)-sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE),sd(b,na.rm=TRUE)),add=TRUE,xlim=c(0,100),ylim=c(0,0.14),col="red",lwd=3)
abline(v=mean(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加均值线
abline(v=mean(b,na.rm=TRUE)+sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
abline(v=mean(b,na.rm=TRUE)-sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
dev.off()
#随机数生成
set.seed(1)
a<-seq(50,80,length.out=100)
set.seed(2)
b<-seq(70,100,length.out=100)
#t检验
t.test(a,b,var.equal=TRUE) #等方差t检验
t.test(a,b) #异方差t检验
#概率密度分布图
#a
png(file = "t_test_4.png")
curve(dnorm(x,mean(a,na.rm=TRUE),sd(a,na.rm=TRUE)),xlim=c(0,100),ylim=c(0,0.14),col="blue",lwd=3)
abline(v=mean(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加均值线
abline(v=mean(a,na.rm=TRUE)+sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
abline(v=mean(a,na.rm=TRUE)-sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE),sd(b,na.rm=TRUE)),add=TRUE,xlim=c(0,100),ylim=c(0,0.14),col="red",lwd=3)
abline(v=mean(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加均值线
abline(v=mean(b,na.rm=TRUE)+sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
abline(v=mean(b,na.rm=TRUE)-sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
dev.off()
#随机数生成
set.seed(1)
a<-seq(50,80,length.out=100)
set.seed(2)
b<-seq(70,100,length.out=100)
#t检验
t.test(a,b,var.equal=TRUE) #等方差t检验
t.test(a,b) #异方差t检验
#概率密度分布图
#a
png(file = "t_test_4.png")
curve(dnorm(x,mean(a,na.rm=TRUE),sd(a,na.rm=TRUE)),xlim=c(0,100),ylim=c(0,0.14),col="blue",lwd=3)
abline(v=mean(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加均值线
abline(v=mean(a,na.rm=TRUE)+sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
abline(v=mean(a,na.rm=TRUE)-sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE),sd(b,na.rm=TRUE)),add=TRUE,xlim=c(0,100),ylim=c(0,0.14),col="red",lwd=3)
abline(v=mean(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加均值线
abline(v=mean(b,na.rm=TRUE)+sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
abline(v=mean(b,na.rm=TRUE)-sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
dev.off()
#随机数生成
set.seed(1)
a<-seq(50,80,length.out=100)
set.seed(2)
b<-seq(70,100,length.out=100)
#t检验
t.test(a,b,var.equal=TRUE) #等方差t检验
t.test(a,b) #异方差t检验
#概率密度分布图
#a
png(file = "t_test_4.png")
curve(dnorm(x,mean(a,na.rm=TRUE),sd(a,na.rm=TRUE)),xlim=c(0,100),ylim=c(0,0.06),col="blue",lwd=3)
abline(v=mean(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加均值线
abline(v=mean(a,na.rm=TRUE)+sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
abline(v=mean(a,na.rm=TRUE)-sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE),sd(b,na.rm=TRUE)),add=TRUE,xlim=c(0,100),ylim=c(0,0.06),col="red",lwd=3)
abline(v=mean(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加均值线
abline(v=mean(b,na.rm=TRUE)+sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
abline(v=mean(b,na.rm=TRUE)-sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
dev.off()
#随机数生成
set.seed(1)
a<-seq(50,80,length.out=100)
set.seed(2)
b<-seq(70,100,length.out=100)
#t检验
t.test(a,b,var.equal=TRUE) #等方差t检验
t.test(a,b) #异方差t检验
#概率密度分布图
#a
png(file = "t_test_4.png")
curve(dnorm(x,mean(a,na.rm=TRUE),sd(a,na.rm=TRUE)),xlim=c(0,100),ylim=c(0,0.05),col="blue",lwd=3)
abline(v=mean(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加均值线
abline(v=mean(a,na.rm=TRUE)+sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
abline(v=mean(a,na.rm=TRUE)-sd(a,na.rm=TRUE),lty=3,lwd=3,col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE),sd(b,na.rm=TRUE)),add=TRUE,xlim=c(0,100),ylim=c(0,0.05),col="red",lwd=3)
abline(v=mean(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加均值线
abline(v=mean(b,na.rm=TRUE)+sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
abline(v=mean(b,na.rm=TRUE)-sd(b,na.rm=TRUE),lty=3,lwd=3,col="red") # 增加标准差线
dev.off()
library(GEOquery)
gds4794 <- getGEO(filename='GDS4794.soft.gz')
#查看样本数量
Meta(gds4794)$sample_count
#查看列注释信息
Columns(gds4794)
data<-Table(gds4794)
head(data)
#查看数据表的行、列数
ncol(data)
nrow(data)
#肿瘤数据
tumor<-data[,3:25]
#正常组织数据
normal<-data[,26:67]
#data第1列设定为tumor和normal行标题
rownames(tumor)<-data[,1]
rownames(normal)<-data[,1]
#随机抽取1行数据
n=1
#按行随机抽样
row.name = rownames(tumor)
sam.row.name = sample(row.name,n,replace=F)
sam.row.name #查看抽中的数据行【某个基因在不同样本中的表达水平】
tumor_expression_level <- tumor[sam.row.name,]
normal_expression_level <- normal[sam.row.name,]
a<-unlist(tumor_expression_level)
b<-unlist(normal_expression_level)
#计算均值和方差
a_average<-mean(a,na.rm=TRUE)
a_sd<-sd(a,na.rm=TRUE)
b_average<-mean(b,na.rm=TRUE)
b_sd<-sd(b,na.rm=TRUE)
#查看结果
a_average
a_sd
b_average
b_sd
t.test(a,b,var.equal=TRUE) #等方差t检验
t.test(a,b) #异方差t检验
#概率密度分布图【结果纪录】
x1=min(a,b)
x2=max(a,b)
y1=0
y2=0.1
#a
png(file = "t_test_1DEG.png")
curve(dnorm(x,mean(a,na.rm=TRUE), sd(a,na.rm=TRUE)), xlim=c(x1,x2),ylim=c(y1,y2), col="blue", lwd=3)
abline(v=a_average,lty=3, lwd=3, col="blue") # 增加均值线
abline(v=a_average+a_sd, lty=3, lwd=3, col="blue") # 增加标准差线
abline(v=a_average-a_sd, lty=3, lwd=3, col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE), sd(b,na.rm=TRUE)), add=TRUE, xlim=c(0,100),ylim=c(0,0.04), col="red", lwd=3)
abline(v=b_average, lty=3, lwd=3, col="red") # 增加均值线
abline(v=b_average+b_sd, lty=3, lwd=3, col="red") # 增加标准差线
abline(v=b_average-b_sd, lty=3, lwd=3, col="red") # 增加标准差线
dev.off()
#概率密度分布图【结果纪录】
x1=min(a,b)
x2=max(a,b)
y1=0
y2=0.01
#a
png(file = "t_test_1DEG.png")
curve(dnorm(x,mean(a,na.rm=TRUE), sd(a,na.rm=TRUE)), xlim=c(x1,x2),ylim=c(y1,y2), col="blue", lwd=3)
abline(v=a_average,lty=3, lwd=3, col="blue") # 增加均值线
abline(v=a_average+a_sd, lty=3, lwd=3, col="blue") # 增加标准差线
abline(v=a_average-a_sd, lty=3, lwd=3, col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE), sd(b,na.rm=TRUE)), add=TRUE, xlim=c(0,100),ylim=c(0,0.01), col="red", lwd=3)
abline(v=b_average, lty=3, lwd=3, col="red") # 增加均值线
abline(v=b_average+b_sd, lty=3, lwd=3, col="red") # 增加标准差线
abline(v=b_average-b_sd, lty=3, lwd=3, col="red") # 增加标准差线
dev.off()
#概率密度分布图【结果纪录】
x1=min(a,b)
x2=max(a,b)
y1=0
y2=0.001
#a
png(file = "t_test_1DEG.png")
curve(dnorm(x,mean(a,na.rm=TRUE), sd(a,na.rm=TRUE)), xlim=c(x1,x2),ylim=c(y1,y2), col="blue", lwd=3)
abline(v=a_average,lty=3, lwd=3, col="blue") # 增加均值线
abline(v=a_average+a_sd, lty=3, lwd=3, col="blue") # 增加标准差线
abline(v=a_average-a_sd, lty=3, lwd=3, col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE), sd(b,na.rm=TRUE)), add=TRUE, xlim=c(0,100),ylim=c(0,0.001), col="red", lwd=3)
abline(v=b_average, lty=3, lwd=3, col="red") # 增加均值线
abline(v=b_average+b_sd, lty=3, lwd=3, col="red") # 增加标准差线
abline(v=b_average-b_sd, lty=3, lwd=3, col="red") # 增加标准差线
dev.off()
#概率密度分布图【结果纪录】
x1=min(a,b)
x2=max(a,b)
y1=0
y2=0.0002
#a
png(file = "t_test_1DEG.png")
curve(dnorm(x,mean(a,na.rm=TRUE), sd(a,na.rm=TRUE)), xlim=c(x1,x2),ylim=c(y1,y2), col="blue", lwd=3)
abline(v=a_average,lty=3, lwd=3, col="blue") # 增加均值线
abline(v=a_average+a_sd, lty=3, lwd=3, col="blue") # 增加标准差线
abline(v=a_average-a_sd, lty=3, lwd=3, col="blue") # 增加标准差线
#b
curve(dnorm(x,mean(b,na.rm=TRUE), sd(b,na.rm=TRUE)), add=TRUE, xlim=c(0,100),ylim=c(0,0.0002), col="red", lwd=3)
abline(v=b_average, lty=3, lwd=3, col="red") # 增加均值线
abline(v=b_average+b_sd, lty=3, lwd=3, col="red") # 增加标准差线
abline(v=b_average-b_sd, lty=3, lwd=3, col="red") # 增加标准差线
dev.off()
#随机数生成
set.seed(1)
a<-seq(0,100,length.out=100)
set.seed(2)
b<-seq(0,100,length.out=50)
#t检验
t.test(a,b,var.equal=TRUE) #等方差t检验
t.test(a,b) #异方差t检验
